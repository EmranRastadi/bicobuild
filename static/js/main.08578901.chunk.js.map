{"version":3,"sources":["entity/Redux/Auth/reducer.js","entity/Redux/Auth/ForgetPasswrod/reducer.js","entity/Model/Reducer/index.js","reportWebVitals.js","i18next.js","services/Routing/index.js","App.js","index.js","services/Authentication/LoginValidation.js","services/Authentication/Types.js","services/Authentication/index.js","services/Authentication/GetToken.js"],"names":["initialState","res","token","resLog","accountType","AuthReducer","state","action","type","response","error","resError","InitialState","msg","RePassReducer","combineReducers","Auth","RePass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","react","useSuspense","createLazy","Route","lazy","Promise","resolve","setTimeout","localStorage","getItem","AdminDashboard","AuthView","AuthRePass","SetData","UploadFile","AuthNewPass","AdminReal","DoctorDashboard","AdminSettingFile","AdminTopUserManagement","ChatComponent","ChatComponentAdmin","PackageList","PackageEdit","PackageAdd","NotFounding","AdminPackages","AdminPackagesEdit","AdminPackagesAdd","PrivatePublic","Component","component","RedirectPath","rPath","rest","render","props","GetToken","to","memo","path","App","fallback","amapkey","version","Routing","fitStore","createStore","Store","applyMiddleware","thunk","ReactDOM","store","document","getElementById","LoginValidation","ok_log","TOKEN_KEY","JSON","parse","CryptoJs","AES","decrypt","SECRET_KEY","toString","enc","Utf8","SECRET_USER_DATA"],"mappings":"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","file":"static/js/main.08578901.chunk.js","sourcesContent":["const initialState = {\n    res: '',\n    token: '',\n    resLog: '',\n    accountType: ''\n};\n\nconst AuthReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'SIGN_UP_SUCCESS' :\n            return {\n                ...state,\n                res: action.response\n            }\n        case 'SIGN_UP_ERR' :\n            return {\n                ...state,\n                res: action.error\n            }\n        case 'SIGN_IN_SUCCESS' :\n            return {\n                ...state, resLog: action.response\n            }\n        case 'SIGN_IN_ERROR' :\n            return {\n                ...state, resLog: action.resError\n            }\n\n        case 'SET_DATA_SUCCESS' :\n            return {\n                ...state , resLog: action.response\n            }\n        case 'RE_PASS_OK' :\n            return {\n                ...state ,\n            }\n\n        case 'UPLOADED_OK' :\n            return {\n                ...state , resLog: action.response\n            }\n        case 'UPLOADED_ERR' :\n            return {\n                ...state , resLog: 'An error has occurred! please try again...'\n            }\n        case 'RESET_PASSWORD' :\n            return {\n                ...state, res: action.response\n            }\n\n        case 'VERIFY_SUCCESS' :\n            return {\n                ...state, token: action.token\n            }\n        case 'CODE_ERR' :\n            return {\n                res: 'error in connection ...'\n            }\n        default :\n            return state\n    }\n}\n\nexport default AuthReducer","const InitialState = {\n    response: '',\n    msg: ''\n}\n\nconst RePassReducer = (state = InitialState, action) => {\n    switch (action.type) {\n        case 'RE_PASS_OK' :\n            return {\n                ...state,\n                response: action.response,\n                msg: 'Check Verify Code please ...'\n            }\n        case 'NOT_FOUND' :\n            return {\n                ...state,\n                response: action.response,\n                msg: 'phoneNumber is not defined!'\n            }\n        case 'NEW_PASS_OK' :\n            return {\n                ...state,\n                response: action.response,\n            }\n        case 'NEW_PASS_ERROR' :\n            return {\n                ...state,\n                response: action.response\n            }\n        default :\n            return state;\n    }\n}\n\nexport default RePassReducer;","import {combineReducers} from \"redux\";\nimport AuthReducer from '../../Redux/Auth/reducer';\nimport RePass from '../../Redux/Auth/ForgetPasswrod/reducer';\n\n\nexport default combineReducers({\n    Auth : AuthReducer,\n    RePass,\n\n})\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport {initReactI18next} from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nconst Language = ['en', 'ch'];\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n        whitelist: Language,\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        react : {\r\n            useSuspense : false\r\n        }\r\n    });\r\n\r\n\r\nexport default i18n;","import React, {lazy, memo} from 'react'\r\nimport {Route, Redirect, Switch} from 'react-router-dom';\r\nimport {LoginValidation} from '../Authentication/LoginValidation';\r\nimport {GetToken} from \"../Authentication\";\r\n\r\nexport const createLazy = Route => {\r\n    const component = lazy(() => {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve(Route);\r\n            }, 1000)\r\n        })\r\n    })\r\n    return component;\r\n}\r\nlet rol = 0;\r\nswitch (localStorage.getItem('rol')) {\r\n    case \"emran\" :\r\n        rol = 1;\r\n        break;\r\n\r\n    case \"admin\" :\r\n        rol = 2;\r\n        break;\r\n\r\n    case \"doctor\" :\r\n        rol = 3;\r\n        break;\r\n\r\n    case \"assistant\" :\r\n        rol = 4;\r\n        break;\r\n\r\n    default :\r\n        rol = 0;\r\n}\r\nconst AdminDashboard = createLazy(import('../../view/PageComponent/Admin/Dashboard'));\r\nconst AuthView = createLazy(import('../../view/PageComponent/Auth'))\r\nconst AuthRePass = createLazy(import('../../view/PageComponent/Auth/ForgetPassword'))\r\nconst SetData = createLazy(import('../../view/PageComponent/Auth/SetData')) // private sigup\r\nconst UploadFile = createLazy(import('../../view/PageComponent/Auth/UploadFile')) // private sigup\r\nconst AuthNewPass = createLazy(import('../../view/PageComponent/Auth/NewPass'))\r\nconst AdminReal = createLazy(import('../../view/PageComponent/AdminReal/Dashboard'))\r\nconst DoctorDashboard = createLazy(import('../../view/PageComponent/Doctor/Dashboard'))\r\nconst AdminSettingFile = createLazy(import('../../view/PageComponent/AdminReal/Setting'))\r\nconst AdminTopUserManagement = createLazy(import('../../view/PageComponent/AdminReal/UserMangement'))\r\nconst ChatComponent = createLazy(import('../../view/PageComponent/AdminReal/Chat'))\r\nconst ChatComponentAdmin = createLazy(import('../../view/PageComponent/Admin/Chat'))\r\nconst PackageList = createLazy(import('../../view/PageComponent/Doctor/Package/Components/PakacgeList'))\r\nconst PackageEdit = createLazy(import('../../view/PageComponent/Doctor/Package/Components/PackageEdit'))\r\nconst PackageAdd = createLazy(import('../../view/PageComponent/Doctor/Package/Components/PackageAdd'))\r\nconst NotFounding = createLazy(import('../../view/PageComponent/Nothing'))\r\nconst AdminPackages = createLazy(import('../../view/PageComponent/Admin/Package/Components/PakacgeList'))\r\nconst AdminPackagesEdit = createLazy(import('../../view/PageComponent/Admin/Package/Components/PackageEdit'))\r\nconst AdminPackagesAdd = createLazy(import('../../view/PageComponent/Admin/Package/Components/PackageAdd'))\r\n\r\n\r\n\r\nexport const PrivateAdminTop = ({component: Component, rPath: RedirectPath, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props =>\r\n            (\r\n                LoginValidation() && rol == 1 ?\r\n                    <Component {...props} />\r\n                    : <Redirect to={RedirectPath}/>\r\n            )}/>\r\n    );\r\n};\r\n\r\nexport const PrivateAdmin = ({component: Component, rPath: RedirectPath, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            LoginValidation() && rol == 2 ?\r\n                <Component {...props} />\r\n                : <Redirect to={RedirectPath}/>\r\n        )}/>\r\n    );\r\n};\r\nexport const PrivateDoctor = ({component: Component, rPath: RedirectPath, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            LoginValidation() && rol === 3 ?\r\n                <Component {...props} />\r\n                : <Redirect to={RedirectPath}/>\r\n        )}/>\r\n    );\r\n};\r\n\r\nexport const PrivateAssistant = ({component: Component, rPath: RedirectPath, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            LoginValidation() && rol === 4 ?\r\n                <Component {...props} />\r\n                : <Redirect to={RedirectPath}/>\r\n        )}/>\r\n    );\r\n};\r\n\r\n\r\nexport const PrivatePublic = ({component: Component, rPath: RedirectPath, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            GetToken() ?\r\n                <Component {...props} />\r\n                : <Redirect to={RedirectPath}/>\r\n        )}/>\r\n    );\r\n};\r\n\r\n\r\nexport const Public = ({component: Component, ...rest}) => {\r\n    // console.log(\"rest : \" , rest)\r\n    return (\r\n        <Route {...rest} render={props => (<Component {...props} />)}/>\r\n    );\r\n};\r\n\r\nexport const PrivateCompoenent = ({component: Component, ...rest}) => {\r\n    return (\r\n        LoginValidation() ?\r\n            <Component {...rest} />\r\n            :\r\n            // redirect to acccess denied\r\n            null\r\n    )\r\n}\r\n\r\nexport default memo(() => {\r\n    return (\r\n        <Switch>\r\n            {/*<Public component={Login} path={\"/login\"} />*/}\r\n            {/*<PrivateAdmin component={AdminDashboard} path={\"/admin\"} rPath={\"/signin\"} />*/}\r\n            {/*<Public  component={AuthView} path={\"/signin\"} />*/}\r\n            {/*<Public  component={AuthRePass} path={\"/repass\"} />*/}\r\n            {/*<Public  component={AuthNewPass} path={\"/newpass\"} />*/}\r\n            {/*<PrivateAdminTop component={AdminReal} path={\"/admin-top\"} rPath={\"/signin\"} />*/}\r\n            {/*<PrivateAdminTop component={AdminTopUserManagement} path={\"/user-manage\"} rPath={\"/signin\"} />*/}\r\n            {/*<PrivateDoctor component={DoctorDashboard} path={\"/doctor\"} rPath={\"/signin\"} />*/}\r\n            {/*<PrivateAdminTop component={AdminSettingFile} path={\"/setting-file\"}/>*/}\r\n            {/*<PrivatePublic component={ChatComponent} path={\"/chat\"}/>*/}\r\n            {/*<Route component={NotFounding} path={\"*\"} />*/}\r\n            <Route component={AdminDashboard} path={\"/admin\"}/>\r\n            <Route component={AdminPackages} path={\"/adminp\"}/>\r\n            <Route component={AdminPackagesEdit} path={\"/adminp-e\"}/>\r\n            <Route component={AdminPackagesAdd} path={\"/adminp-a\"}/>\r\n            <Route component={AuthView} path={\"/signin\"}/>\r\n            {/*<Route component={UserData} path={\"/your-password\"}/>*/}\r\n            <Route component={SetData} path={\"/your-details\"}/>\r\n            <Route component={AuthRePass} path={\"/repass\"}/>\r\n            <PrivatePublic component={AuthNewPass} path={\"/newpass\"} rPath={\"/repass\"}/>\r\n            <Route component={UploadFile} path={\"/upload-file\"}/>\r\n            <Route component={AdminReal} path={\"/admin-top\"} rPath={\"/signin\"}/>\r\n            <Route component={AdminTopUserManagement} path={\"/user-manage\"} rPath={\"/signin\"}/>\r\n            <PrivatePublic component={DoctorDashboard} path={\"/doctor\"} rPath={\"/signin\"}/>\r\n            <Route component={PackageList} path={\"/package-list\"} rPath={\"/signin\"}/>\r\n            <Route component={PackageEdit} path={\"/package-edit\"} rPath={\"/signin\"}/>\r\n            <Route component={PackageAdd} path={\"/package-add\"} rPath={\"/signin\"}/>\r\n            <Route component={AdminSettingFile} path={\"/setting-file\"}/>\r\n            <Route component={ChatComponent} path={\"/chat\"}/>\r\n            <Route component={ChatComponentAdmin} path={\"/chat-admin\"}/>\r\n            <Route component={NotFounding} path={\"*\"}/>\r\n        </Switch>\r\n    )\r\n})","import React, {Suspense} from \"react\";\nimport {BrowserRouter as Router}  from \"react-router-dom\";\nimport RoutingPath from \"./services/Routing\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {Map} from \"react-amap\";\n// import BrowserHistory from \"./entity/Model/History/BrowserHistory\";\n// import history from './entity/Model/History/BrowserHistory';\n\nconst App = () => {\n    return (\n        <Router>\n            <Suspense fallback={() => <div>loading ...</div>}>\n                <Map amapkey={\"79f4e464d0173234eee9dc574e89edd9\"} version={2} />\n                <RoutingPath/>\n            </Suspense>\n        </Router>\n    )\n}\n\nexport default App;","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport Store from './entity/Model/Reducer'\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware , createStore} from \"redux\";\nimport './i18next';\nimport App from './App';\nimport thunk from \"redux-thunk\";\nimport {Map} from 'react-amap';\nconst fitStore = createStore(Store , applyMiddleware(thunk))\nReactDOM.render(\n    <Provider store={fitStore}>\n            <App />\n    </Provider>,\n    document.getElementById('root')\n);\nreportWebVitals();","import {TOKEN_KEY, SECRET_KEY} from \"./Types\";\r\nimport CryptoJs from 'crypto-js';\r\n\r\nexport const LoginValidation = () => {\r\n    try {\r\n        const ok_log = localStorage.getItem(TOKEN_KEY);\r\n        if (ok_log) {\r\n            const decrypt_token = JSON.parse(CryptoJs.AES.decrypt(ok_log, SECRET_KEY).toString(CryptoJs.enc.Utf8));\r\n            return decrypt_token;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch {\r\n        return false\r\n    }\r\n}","// export const TOKEN_KEY = \"ErPl2B1S76_BICON_JMT_USER_LkVbA2021\";\r\nexport const TOKEN_KEY = \"ErPl2B1S76LkVA2021fukofBasE$$%\";\r\nexport const SECRET_KEY = \"ErPl2B1S76LkVA2021\"\r\nexport const SECRET_USER_DATA = \"ErPl2B1S76LkVA20214512$#bdfb%%\"\r\nexport const SIGN_UP_URL = \"user/register\";","export {GetToken} from './GetToken'","import {TOKEN_KEY, SECRET_KEY} from \"./Types\"\r\nimport CryptoJs from \"crypto-js\";\r\n\r\nexport const GetToken = () => {\r\n\r\n    try {\r\n        const token  = localStorage.getItem(TOKEN_KEY);\r\n        return token\r\n\r\n        // const hasLogin = localStorage.getItem(TOKEN_KEY) ? true : false;\r\n        // if (hasLogin) {\r\n        //     const data = localStorage.getItem(TOKEN_KEY);\r\n        //     const Bytes = CryptoJs.AES.decrypt(data, SECRET_KEY);\r\n        //     const decrypted = JSON.parse(Bytes.toString(CryptoJs.enc.Utf8));\r\n        //     const token = decrypted.token;\r\n        //     return token;\r\n        // } else return false\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default GetToken"],"sourceRoot":""}