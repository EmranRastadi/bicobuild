{"version":3,"sources":["services/Connection/Types.js","services/Connection/Request.js","entity/Redux/Auth/api.js","entity/Redux/Auth/SignUp/Action.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","entity/Redux/Auth/ForgetPasswrod/Action.js","view/PageComponent/Auth/ForgetPassword/View.js","view/PageComponent/Auth/ForgetPassword/index.js"],"names":["REQUEST_URL","REQUEST_HEADER_TOKEN","GetToken","axiosRetry","axios","retries","retryDelay","exponentialDelay","request","create","baseURL","API","timeout","headers","RequestApi","SignIn","data","Request","post","SignUp","VerifyCode","ForgetPassword","NewPassword","UserFirstData","put","DoctorAdd","formData","JsonData","JSON","stringify","phoneNumber","accountType","dispatch","getState","a","then","response","type","code","code_1","code_2","code_3","code_4","token","SetData","fullName","fullname","password","FitData","isAssistance","isAssistant","assistant","description","console","log","error","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","RePassword","SetNewPassword","connect","state","RePass","Verify","Auth","props","useTranslation","t","i18n","useDispatch","useState","registerData","setRegisterData","codeVerify","setCodeVerify","useEffect","localStorage","setItem","TOKEN_KEY","window","location","pathname","M","Toast","dismissAll","toast","html","removeItem","statusCode","$","css","elems","document","querySelectorAll","Tabs","init","tabh","FormSelect","body","on","e","key","which","sib","target","preventDefault","find","eq","select","focus","verifyCodeGet","className","id","style","width","onChange","getItem","lan","is","lang","changeLanguage","right","src","marginTop","fontSize","marginBottom","height","color","placeholder","autoComplete","min","max","pattern","val","userType","inputRegisterChange","required","onClick","fadeIn","alert","setTimeout","fadeOut","textTransform","onSubmit","handleCheckFormVerify","maxLength","size","memo"],"mappings":"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","file":"static/js/16.3f292466.chunk.js","sourcesContent":["import {GetToken} from \"../Authentication\";\r\n\r\nexport const BASE_URL = \"http://188.34.138.109:8000/api/\";\r\nexport const VERSION = \"v1\";\r\nexport const REQUEST_URL = `${BASE_URL}${VERSION}`;\r\nexport const TIMEOUT = 60000;\r\nexport const RETRY_COUNT = 3;\r\nexport const JWT_TOKEN = GetToken();\r\nexport const REQUEST_HEADER = {\r\n    'Content-Type': 'application/json'\r\n}\r\nexport const REQUEST_HEADER_TOKEN = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': \"Bearer \" + JWT_TOKEN\r\n}","import * as API from './Types';\r\nimport axios from \"axios\";\r\nimport axiosRetry from \"axios-retry\";\r\n\r\naxiosRetry(\r\n    axios,\r\n    {\r\n        retries: API.RETRY_COUNT,\r\n        retryDelay: axiosRetry.exponentialDelay\r\n    }\r\n);\r\nexport const request = axios.create({\r\n    baseURL: API.REQUEST_URL,\r\n    timeout: API.TIMEOUT,\r\n    headers: API.REQUEST_HEADER_TOKEN\r\n});\r\n\r\nexport const request_global = axios.create({\r\n    baseURL: API.REQUEST_URL,\r\n    timeout: API.TIMEOUT,\r\n    headers: API.REQUEST_HEADER\r\n});","import { request as Request  , request_global as GlobalReq} from \"../../../services/Connection/Request\";\nimport { Path as Api } from \"./Types\";\n\nexport const RequestApi = {\n    SignIn: (data) => Request.post(\"auth/login\" , data ),\n    SignUp: (data) => Request.post(\"auth/register\" , data),\n    VerifyCode : (data) => Request.post(\"auth/verifyActiveCode\" , data),\n    ForgetPassword : (data) => Request.post(\"auth/forgotPassword/sendActiveCode\" , data),\n    NewPassword : (data) => Request.post(\"auth/resetPassword\" , data),\n    UserFirstData : (data) => Request.put(\"auth/updateDetails\" , data),\n    DoctorAdd : (data) => Request.post(\"doctors\" , data),\n}","import {RequestApi as request} from \"../api\";\nimport {GetToken} from '../../../../services/Authentication/GetToken'\n\nexport const SignUp = (formData) => {\n    const JsonData = JSON.stringify({\n        phoneNumber: formData.phoneNumber,\n        accountType: 2\n    })\n    return async (dispatch, getState) => {\n        await request.SignUp(JsonData)\n            .then(response => {\n                dispatch({\n                    type: 'SIGN_UP_SUCCESS',\n                    response: response.data\n                })\n            })\n    }\n}\n\nexport const VerifyCode = (data) => {\n\n    var code = data.code_1 + data.code_2 + data.code_3 + data.code_4;\n\n    const JsonData = JSON.stringify({\n        phoneNumber: data.phoneNumber,\n        code: code\n    })\n\n    // console.log(\"action datas: \" ,JsonData)\n\n    return async (dispatch , getState) => {\n        await request.VerifyCode(JsonData)\n            .then(response=>{\n              dispatch({\n                  type : \"VERIFY_SUCCESS\",\n                  token : response.data.token\n              })\n            })\n    }\n}\n\n\n\nexport const SetPassword = (data) => {\n\n    const JsonData = JSON.stringify({\n        password : data.password,\n\n    })\n    return async (dispatch, getState) => {\n        await request.ResetPasswrod(JsonData)\n            .then(response => {\n                dispatch({\n                    type: 'RESET_PASSWORD',\n                    response: response\n                })\n            })\n    }\n}\n\nexport const SetData = (data) => {\n    const JsonData = JSON.stringify({\n        fullName : data.fullname,\n        password : data.password\n    })\n\n    return async (dispatch , getState)=>{\n        await request.UserFirstData(JsonData)\n            .then(response => {\n                dispatch({\n                    type : 'SET_DATA_SUCCESS',\n                    response : response\n                })\n            })\n    }\n}\n\nexport const FitData = (data) => {\n\n    let JsonData = {};\n    if (data.isAssistance)\n    {\n        JsonData = JSON.stringify({\n            isAssistant : true,\n            assistant : {\n                phoneNumber : data.phoneNumber,\n                description : data.description,\n            }\n        })\n\n    }else{\n        JsonData = JSON.stringify({\n            isAssistant : false,\n        })\n    }\n\n\n    return async (dispatch , getState)=>{\n        console.log(\"jsons sss : \" , JsonData);\n        await request.DoctorAdd(JsonData)\n            .then(response => {\n                dispatch({\n                    type : 'UPLOADED_OK',\n                    response : response\n                })\n            },error => {\n                dispatch({\n                    type : 'UPLOADED_ERR',\n                    response : error\n                })\n            })\n    }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {memo} from 'react';\nimport {RequestApi as request} from \"../api\";\n\nexport const RePassword = (data) => {\n    const JsonData = JSON.stringify({\n        phoneNumber: data.phoneNumber,\n    });\n\n    return async (dispatch, getState) => {\n        await request.ForgetPassword(JsonData)\n            .then(response => {\n                dispatch({\n                    type : 'RE_PASS_OK',\n                    response : response\n                })\n            } , error => {\n                dispatch({\n                    type : 'NOT_FOUND',\n                    response : 'not found'\n                })\n            })\n    }\n}\n\nexport const SetNewPassword = (data) => {\n    const JsonData = JSON.stringify({\n        password : data\n    });\n    return async (dispatch , getState) =>{\n        await request.NewPassword(JsonData)\n            .then(response => {\n            dispatch({\n                response:response,\n                type : 'NEW_PASS_OK'\n            },error => {\n                dispatch({\n                    type : 'NEW_PASS_ERROR',\n                    response : 'server error'\n                })\n            })\n        })\n    }\n}","import React, {useState, useEffect} from 'react';\nimport {Redirect, NavLink} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport $ from 'jquery';\nimport {useDispatch} from \"react-redux\";\nimport {VerifyCode} from \"../../../../entity/Redux/Auth/SignUp/Action\";\nimport {RePassword} from \"../../../../entity/Redux/Auth/ForgetPasswrod/Action\";\nimport {connect} from \"react-redux\";\nimport M from 'materialize-css';\nimport {TOKEN_KEY} from \"../../../../services/Authentication/Types\";\n\nfunction RePass(props) {\n    const {t, i18n} = useTranslation();\n    const dispatch = useDispatch();\n    const [registerData, setRegisterData] = useState({})\n    const [codeVerify, setCodeVerify] = useState({})\n\n    useEffect(() => {\n        if (props.Verify.token) {\n            localStorage.setItem(TOKEN_KEY, props.Verify.token);\n            window.location.pathname=\"/newpass\"\n        } else {\n            M.Toast.dismissAll();\n            M.toast({html: 'Your phone not registered!'});\n            localStorage.removeItem(\"phone\");\n        }\n        if (props.RePass.response) {\n            if (props.RePass.response.data) {\n                if (props.RePass.response.data.statusCode === 200) {\n                    $(\"#repass_\").css({\"left\": \"-100%\"});\n                    M.toast({html: 'verify code is : ' + props.RePass.response.data.data})\n                } else {\n\n                }\n            } else {\n                M.Toast.dismissAll();\n                M.toast({html: 'Your PhoneNumber Not Exist!'})\n                localStorage.removeItem(\"phone\");\n            }\n        }\n\n\n        var elems = document.querySelectorAll('.tabs');\n        M.Tabs.init(elems);\n        var tabh = document.querySelectorAll('select');\n        M.FormSelect.init(tabh);\n        var body = $('#wrapper');\n\n        function goToNextInput(e) {\n            var key = e.which,\n                t = $(e.target),\n                sib = t.next('input');\n            if (key != 9 && (key < 48 || key > 57)) {\n                e.preventDefault();\n                return false;\n            }\n            if (key === 9) {\n                return true;\n            }\n            if (!sib || !sib.length) {\n                sib = body.find('input').eq(0);\n            }\n            sib.select().focus();\n        }\n\n        function onKeyDown(e) {\n            var key = e.which;\n\n            if (key === 9 || (key >= 48 && key <= 57)) {\n                return true;\n            }\n\n            e.preventDefault();\n            return false;\n        }\n\n        function onFocus(e) {\n            $(e.target).select();\n        }\n\n\n        body.on('keyup', 'input', goToNextInput);\n        body.on('keydown', 'input', onKeyDown);\n        body.on('click', 'input', onFocus);\n\n\n    })\n\n\n    function verify_code() {\n        $(\"#loading_back\").fadeIn()\n        setTimeout(function () {\n            $(\"#loading_back\").fadeOut();\n            $(\"#repass_\").css({\"left\": \"-100%\"});\n        }, 3000);\n    }\n\n    function setNewPass() {\n        $(\"#loading_back\").fadeIn()\n        setTimeout(function () {\n            $(\"#loading_back\").fadeOut();\n            window.location.pathname = \"/newpass\";\n        }, 3000);\n    }\n\n\n    function handleLang(e) {\n        e.preventDefault();\n        if (!localStorage.getItem(\"lan\")) {\n            localStorage.setItem(\"lan\", 'en');\n        }\n\n        var lan = localStorage.getItem(\"lan\");\n        var ckeckbox = $(\"input[name=cahngelan]\");\n        if (ckeckbox.is(\":checked\") && lan === 'en') {\n            localStorage.setItem(\"lan\", 'ch');\n        } else {\n            localStorage.setItem(\"lan\", 'en');\n        }\n\n        let lang = localStorage.getItem('lan');\n        i18n.changeLanguage(lang);\n    }\n\n\n    function inputRegisterChange(e) {\n        var phoneNumber = $(\"input[name=phoneNumber]\").val();\n        localStorage.setItem(\"phone\", phoneNumber);\n        var userType = $(\"input[name=doctor]:checked\").val();\n        localStorage.setItem(\"rols\", userType);\n        setRegisterData({\n            ...registerData,\n            phoneNumber: phoneNumber,\n            userType: userType\n        })\n    }\n\n    function verify_code() {\n        $(\"#loading_back\").fadeIn()\n        setCodeVerify({\n            ...codeVerify,\n            phoneNumber: registerData.phoneNumber\n        })\n        var phoneNumber = registerData.phoneNumber;\n        if (phoneNumber == \"\" || phoneNumber == null) {\n            alert(\"phone number must filled\");\n        } else {\n            setTimeout(function () {\n                $(\"#loading_back\").fadeOut();\n                dispatch(RePassword(registerData))\n            }, 3000);\n        }\n    }\n\n    const [verifyJsonData, setVerifyJsonData] = useState({})\n\n\n    function handleCheckFormVerify(e) {\n        e.preventDefault();\n        dispatch(VerifyCode(codeVerify))\n    }\n\n\n    function verifyCodeGet(e) {\n        setCodeVerify({\n            ...codeVerify,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const select_type = t('select-type.l');\n    return (\n        <div className=\"auth_back\">\n            <div id=\"back_shado\"></div>\n            <div className=\"col s12\">\n                <div className=\"col s1 m3 l4\">\n\n                </div>\n                <div className=\"col s10 m6 l4\">\n\n                    <div id=\"auth_box\" style={{width: '24rem'}}>\n                        <div id=\"change_or_sub\">\n                            <input type=\"checkbox\" name=\"cahngelan\" onChange={handleLang} id=\"change_lang_login\"/>\n                            <span>{t('Lang.l')}</span>\n                            {/*<span></span>*/}\n                        </div>\n\n                        <div className={`mini_box_over`}>\n                            <div id={`mini_circule`}>\n                                <i className=\"material-icons\">person_outline</i>\n                            </div>\n                        </div>\n                        <div className={`mini_box_over`} style={{right: 0}}>\n                            <div id={`mini_circule_r`}>\n                                <img src=\"/img/icons/doctorB.png\"/>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n\n\n                                <div className=\"row\">\n                                    <div className=\"input-field col s12\" style={{marginTop: 55}}>\n                                        <p id=\"text_sub\">{t('Welcome-to.l')}</p>\n                                        <p id=\"text_sub\" style={{\n                                            fontSize: \"40px\",\n                                            marginTop: \"15px !important\",\n                                            marginBottom: \"15px !important\"\n                                        }}>Bi Con</p>\n                                        <p id=\"text_sub\">{t('ForgetPasswrod.l')}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"register_type_user\" id=\"verifyBorder\" style={{height: '210px'}}>\n\n\n                                    <div id=\"loading_back\">\n\n\n                                        <div className=\"preloader-wrapper big active\" id=\"loading_progress\">\n                                            <div className=\"spinner-layer spinner-blue-only\">\n                                                <div className=\"circle-clipper left\">\n                                                    <div className=\"circle\"></div>\n                                                </div>\n                                                <div className=\"gap-patch\">\n                                                    <div className=\"circle\"></div>\n                                                </div>\n                                                <div className=\"circle-clipper right\">\n                                                    <div className=\"circle\"></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div id=\"repass_\">\n                                        <div className=\"container\">\n                                            <div className=\"row\">\n                                                <div className=\"col s6\">\n                                                    <div className=\"input-field col s12\" style={{marginTop: 0}}>\n                                                        <p style={{color: '#ccc'}}>&nbsp;&nbsp;{t('Phone-num.l')}</p>\n                                                        <div id=\"input_back\">\n                                                            <input placeholder={t('U-phone-num.l')} autoComplete=\"false\"\n                                                                   name=\"phoneNumber\"\n                                                                   min=\"0\" max=\"9\"\n                                                                   pattern=\"[0-9]{1}\"\n                                                                   onChange={e => inputRegisterChange(e)}\n                                                                   required type=\"text\" className=\"validate\"/>\n                                                        </div>\n                                                        <p id=\"alert-p\">&nbsp;&nbsp;{t('must-field.l')}</p>\n                                                        {/*<label htmlFor=\"password\">Password</label>*/}\n                                                    </div>\n                                                    <div className={`col s6`}>\n                                                        {/*<Link to=\"/login/verify\">*/}\n                                                        <a className=\"btn blue darken-4 waves-effect\"\n                                                           onClick={verify_code}\n                                                           style={{textTransform: 'unset !important'}}\n                                                           id=\"check_phone_num\">{t('SignUp.l')}</a>\n                                                        {/*</Link>*/}\n                                                    </div>\n                                                </div>\n\n                                                <form onSubmit={e => handleCheckFormVerify(e)}>\n\n                                                    <div className=\"col s6\">\n                                                        <div className=\"input-field col s12\" style={{marginTop: 0}}>\n                                                            <p style={{color: '#ccc'}}>&nbsp;&nbsp;{t('Verify.l')}</p>\n\n                                                            <div id=\"wrapper\">\n                                                                <div id=\"dialog\">\n\n                                                                    <div id=\"form\">\n\n                                                                        <input type=\"text\" placeholder=\"--\"\n                                                                               maxLength=\"1\"\n                                                                               size=\"1\"\n                                                                               name=\"code_1\"\n                                                                               onChange={e => verifyCodeGet(e)}\n                                                                               min=\"0\" max=\"9\"\n                                                                               pattern=\"[0-9]{1}\"/>\n                                                                        <input type=\"text\" placeholder=\"--\"\n                                                                               maxLength=\"1\"\n                                                                               size=\"1\"\n                                                                               onChange={e => verifyCodeGet(e)}\n                                                                               name=\"code_2\"\n                                                                               min=\"0\" max=\"9\"\n                                                                               pattern=\"[0-9]{1}\"/>\n                                                                        <input type=\"text\" placeholder=\"--\"\n                                                                               maxLength=\"1\"\n                                                                               size=\"1\"\n                                                                               onChange={e => verifyCodeGet(e)}\n                                                                               name=\"code_3\"\n                                                                               min=\"0\" max=\"9\"\n                                                                               pattern=\"[0-9]{1}\"/>\n                                                                        <input type=\"text\" placeholder=\"--\"\n                                                                               maxLength=\"1\"\n                                                                               size=\"1\"\n                                                                               name=\"code_4\"\n                                                                               min=\"0\" max=\"9\"\n                                                                               onChange={e => verifyCodeGet(e)}\n                                                                               pattern=\"[0-9]{1}\"/>\n\n\n                                                                    </div>\n\n                                                                </div>\n\n                                                            </div>\n\n\n                                                            <p id=\"alert-p\">&nbsp;&nbsp;{t('must-field.l')}</p>\n\n                                                            {/*<label htmlFor=\"password\">Password</label>*/}\n                                                        </div>\n\n                                                        <div className={`col s6`}>\n                                                            {/*<NavLink to={{pathname : '/login/verify' }}>*/}\n                                                            <button type=\"submit\"\n                                                                    style={{textTransform: 'unset !important'}}\n                                                                    id=\"check_code\"\n                                                                    className=\"btn blue darken-4 waves-effect\">{t('check.l')}</button>\n                                                            {/*</NavLink>*/}\n                                                        </div>\n                                                    </div>\n\n\n                                                </form>\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n                <div className=\"col s1 m3 l4\">\n\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {RePass: state.RePass, Verify: state.Auth}\n}\nexport default connect(mapStateToProps, {RePassword, VerifyCode})(RePass);","import React , {memo} from 'react';\nimport RePass from \"./View\";\nexport default memo(()=>{\n    return(\n        <RePass>\n\n        </RePass>\n    )\n})\n\n"],"sourceRoot":""}